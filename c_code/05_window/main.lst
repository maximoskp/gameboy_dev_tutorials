                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.3 #11868 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _interruptLCD
                                     13 	.globl _font_set
                                     14 	.globl _font_load
                                     15 	.globl _font_init
                                     16 	.globl _set_win_tiles
                                     17 	.globl _set_bkg_tiles
                                     18 	.globl _set_bkg_data
                                     19 	.globl _wait_vbl_done
                                     20 	.globl _set_interrupts
                                     21 	.globl _disable_interrupts
                                     22 	.globl _enable_interrupts
                                     23 	.globl _add_LCD
                                     24 	.globl _windowmap
                                     25 	.globl _backgroundmap
                                     26 	.globl _backgroundtiles
                                     27 ;--------------------------------------------------------
                                     28 ; special function registers
                                     29 ;--------------------------------------------------------
                                     30 ;--------------------------------------------------------
                                     31 ; ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _DATA
      000000                         34 _backgroundtiles::
      000000                         35 	.ds 128
      000080                         36 _backgroundmap::
      000080                         37 	.ds 720
      000350                         38 _windowmap::
      000350                         39 	.ds 5
                                     40 ;--------------------------------------------------------
                                     41 ; absolute external ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area _DABS (ABS)
                                     44 ;--------------------------------------------------------
                                     45 ; global & static initialisations
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 	.area _GSINIT
                                     49 	.area _GSFINAL
                                     50 	.area _GSINIT
                                     51 ;simplebackground.c:26: unsigned char backgroundtiles[] =
      000000 01r00r00                52 	ld	bc, #_backgroundtiles+0
      000003 59                      53 	ld	e, c
      000004 50                      54 	ld	d, b
      000005 CDr00r00                55 	call	__initrleblock
      000008 F0 00                   56 	.db	#-16, #0x00
      00000A 02                      57 	.db	#2
      00000B FF FF                   58 	.db	#0xFF, #0xFF
      00000D FA 01                   59 	.db	#-6, #0x01
      00000F 02                      60 	.db	#2
      000010 FF FF                   61 	.db	#0xFF, #0xFF
      000012 FA 10                   62 	.db	#-6, #0x10
      000014 02                      63 	.db	#2
      000015 FF FF                   64 	.db	#0xFF, #0xFF
      000017 FA 01                   65 	.db	#-6, #0x01
      000019 02                      66 	.db	#2
      00001A FF FF                   67 	.db	#0xFF, #0xFF
      00001C FA 11                   68 	.db	#-6, #0x11
      00001E 02                      69 	.db	#2
      00001F FF FF                   70 	.db	#0xFF, #0xFF
      000021 FA 80                   71 	.db	#-6, #0x80
      000023 02                      72 	.db	#2
      000024 FF FF                   73 	.db	#0xFF, #0xFF
      000026 FA 88                   74 	.db	#-6, #0x88
      000028 0F                      75 	.db	#15
      000029 55 00 AA 00 55 00 AA    76 	.db	#0x55, #0x00, #0xAA, #0x00, #0x55, #0x00, #0xAA, #0x00
             00
      000031 55 00 AA 00 55 00 AA    77 	.db	#0x55, #0x00, #0xAA, #0x00, #0x55, #0x00, #0xAA
      000038 F7 00                   78 	.db	#-9, #0x00
      00003A 07                      79 	.db	#7
      00003B FF FF FF AA FF 00 55    80 	.db	#0xFF, #0xFF, #0xFF, #0xAA, #0xFF, #0x00, #0x55
      000042 F5 00                   81 	.db	#-11, #0x00
      000044 05                      82 	.db	#5
      000045 FF FF 00 FF FF          83 	.db	#0xFF, #0xFF, #0x00, #0xFF, #0xFF
      00004A F5 00                   84 	.db	#-11, #0x00
      00004C 06                      85 	.db	#6
      00004D FF 00 FF 00 FF 00       86 	.db	#0xFF, #0x00, #0xFF, #0x00, #0xFF, #0x00
      000053 00                      87 	.db	#0
                                     88 ;simplebackgroundmap.c:25: unsigned char backgroundmap[] =
      000054 01r80r00                89 	ld	bc, #_backgroundmap+0
      000057 59                      90 	ld	e, c
      000058 50                      91 	ld	d, b
      000059 CDr00r00                92 	call	__initrleblock
      00005C 81 00                   93 	.db	#-127, #0x00
      00005E 81 00                   94 	.db	#-127, #0x00
      000060 DD 00                   95 	.db	#-35, #0x00
      000062 01                      96 	.db	#1
      000063 28                      97 	.db	#0x28
      000064 F5 26                   98 	.db	#-11, #0x26
      000066 01                      99 	.db	#1
      000067 27                     100 	.db	#0x27
      000068 E5 00                  101 	.db	#-27, #0x00
      00006A 01                     102 	.db	#1
      00006B 28                     103 	.db	#0x28
      00006C F5 26                  104 	.db	#-11, #0x26
      00006E 01                     105 	.db	#1
      00006F 27                     106 	.db	#0x27
      000070 E5 00                  107 	.db	#-27, #0x00
      000072 01                     108 	.db	#1
      000073 28                     109 	.db	#0x28
      000074 F5 26                  110 	.db	#-11, #0x26
      000076 01                     111 	.db	#1
      000077 27                     112 	.db	#0x27
      000078 E5 00                  113 	.db	#-27, #0x00
      00007A 01                     114 	.db	#1
      00007B 28                     115 	.db	#0x28
      00007C F5 26                  116 	.db	#-11, #0x26
      00007E 01                     117 	.db	#1
      00007F 27                     118 	.db	#0x27
      000080 EE 00                  119 	.db	#-18, #0x00
      000082 F7 2B                  120 	.db	#-9, #0x2b
      000084 01                     121 	.db	#1
      000085 28                     122 	.db	#0x28
      000086 F5 26                  123 	.db	#-11, #0x26
      000088 01                     124 	.db	#1
      000089 27                     125 	.db	#0x27
      00008A EF 2B                  126 	.db	#-17, #0x2b
      00008C 01                     127 	.db	#1
      00008D 00                     128 	.db	#0x00
      00008E D9 29                  129 	.db	#-39, #0x29
      000090 01                     130 	.db	#1
      000091 00                     131 	.db	#0x00
      000092 D9 29                  132 	.db	#-39, #0x29
      000094 01                     133 	.db	#1
      000095 00                     134 	.db	#0x00
      000096 D9 29                  135 	.db	#-39, #0x29
      000098 01                     136 	.db	#1
      000099 00                     137 	.db	#0x00
      00009A D9 29                  138 	.db	#-39, #0x29
      00009C 01                     139 	.db	#1
      00009D 00                     140 	.db	#0x00
      00009E D9 29                  141 	.db	#-39, #0x29
      0000A0 01                     142 	.db	#1
      0000A1 00                     143 	.db	#0x00
      0000A2 D9 29                  144 	.db	#-39, #0x29
      0000A4 01                     145 	.db	#1
      0000A5 00                     146 	.db	#0x00
      0000A6 00                     147 	.db	#0
                                    148 ;windowmap.c:1: unsigned char windowmap[] =
      0000A7 01r50r03               149 	ld	bc, #_windowmap+0
      0000AA 59                     150 	ld	e, c
      0000AB 50                     151 	ld	d, b
      0000AC CDr00r00               152 	call	__initrleblock
      0000AF 05                     153 	.db	#5
      0000B0 13 10 17 17 1A         154 	.db	#0x13, #0x10, #0x17, #0x17, #0x1A
      0000B5 00                     155 	.db	#0
                                    156 ;--------------------------------------------------------
                                    157 ; Home
                                    158 ;--------------------------------------------------------
                                    159 	.area _HOME
                                    160 	.area _HOME
                                    161 ;--------------------------------------------------------
                                    162 ; code
                                    163 ;--------------------------------------------------------
                                    164 	.area _CODE
                                    165 ;main.c:7: void interruptLCD(){
                                    166 ;	---------------------------------
                                    167 ; Function interruptLCD
                                    168 ; ---------------------------------
      000000                        169 _interruptLCD::
                                    170 ;main.c:8: HIDE_WIN;
      000000 F0r00                  171 	ldh	a, (_LCDC_REG+0)
      000002 E6 DF                  172 	and	a, #0xdf
      000004 E0r00                  173 	ldh	(_LCDC_REG+0),a
                                    174 ;main.c:9: }
      000006 C9                     175 	ret
                                    176 ;main.c:11: void main(){
                                    177 ;	---------------------------------
                                    178 ; Function main
                                    179 ; ---------------------------------
      000007                        180 _main::
                                    181 ;main.c:14: STAT_REG = 0x45;
      000007 3E 45                  182 	ld	a, #0x45
      000009 E0r00                  183 	ldh	(_STAT_REG+0),a
                                    184 ;main.c:15: LYC_REG = 0x08;  //  Fire LCD Interupt on the 8th scan line (just first row)
      00000B 3E 08                  185 	ld	a, #0x08
      00000D E0r00                  186 	ldh	(_LYC_REG+0),a
                                    187 ;main.c:17: disable_interrupts();
      00000F CDr00r00               188 	call	_disable_interrupts
                                    189 ;main.c:19: font_init();
      000012 CDr00r00               190 	call	_font_init
                                    191 ;main.c:20: min_font = font_load(font_min); // 36 tile
      000015 21r00r00               192 	ld	hl, #_font_min
      000018 E5                     193 	push	hl
      000019 CDr00r00               194 	call	_font_load
      00001C E8 02                  195 	add	sp, #2
                                    196 ;main.c:21: font_set(min_font);
      00001E D5                     197 	push	de
      00001F CDr00r00               198 	call	_font_set
      000022 E8 02                  199 	add	sp, #2
                                    200 ;main.c:23: set_bkg_data(37, 7, backgroundtiles);
      000024 21r00r00               201 	ld	hl, #_backgroundtiles
      000027 E5                     202 	push	hl
      000028 11 25 07               203 	ld	de, #0x0725
      00002B D5                     204 	push	de
      00002C CDr00r00               205 	call	_set_bkg_data
      00002F E8 04                  206 	add	sp, #4
                                    207 ;main.c:24: set_bkg_tiles(0, 0, 40, 18, backgroundmap);
      000031 21r80r00               208 	ld	hl, #_backgroundmap
      000034 E5                     209 	push	hl
      000035 11 28 12               210 	ld	de, #0x1228
      000038 D5                     211 	push	de
      000039 AF                     212 	xor	a, a
      00003A F5                     213 	push	af
      00003B 33                     214 	inc	sp
      00003C AF                     215 	xor	a, a
      00003D F5                     216 	push	af
      00003E 33                     217 	inc	sp
      00003F CDr00r00               218 	call	_set_bkg_tiles
      000042 E8 06                  219 	add	sp, #6
                                    220 ;main.c:26: set_win_tiles(0,0,5,1,windowmap);
      000044 21r50r03               221 	ld	hl, #_windowmap
      000047 E5                     222 	push	hl
      000048 11 05 01               223 	ld	de, #0x0105
      00004B D5                     224 	push	de
      00004C AF                     225 	xor	a, a
      00004D F5                     226 	push	af
      00004E 33                     227 	inc	sp
      00004F AF                     228 	xor	a, a
      000050 F5                     229 	push	af
      000051 33                     230 	inc	sp
      000052 CDr00r00               231 	call	_set_win_tiles
      000055 E8 06                  232 	add	sp, #6
                                    233 ;/Users/max/Documents/gb_dev/gbdk/include/gb/gb.h:564: WX_REG=x, WY_REG=y;
      000057 3E 07                  234 	ld	a, #0x07
      000059 E0r00                  235 	ldh	(_WX_REG+0),a
      00005B 3E 00                  236 	ld	a, #0x00
      00005D E0r00                  237 	ldh	(_WY_REG+0),a
                                    238 ;main.c:29: SHOW_BKG;
      00005F F0r00                  239 	ldh	a, (_LCDC_REG+0)
      000061 F6 01                  240 	or	a, #0x01
      000063 E0r00                  241 	ldh	(_LCDC_REG+0),a
                                    242 ;main.c:30: SHOW_WIN;
      000065 F0r00                  243 	ldh	a, (_LCDC_REG+0)
      000067 F6 20                  244 	or	a, #0x20
      000069 E0r00                  245 	ldh	(_LCDC_REG+0),a
                                    246 ;main.c:31: DISPLAY_ON;
      00006B F0r00                  247 	ldh	a, (_LCDC_REG+0)
      00006D F6 80                  248 	or	a, #0x80
      00006F E0r00                  249 	ldh	(_LCDC_REG+0),a
                                    250 ;main.c:33: add_LCD(interruptLCD);
      000071 21r00r00               251 	ld	hl, #_interruptLCD
      000074 E5                     252 	push	hl
      000075 CDr00r00               253 	call	_add_LCD
      000078 E8 02                  254 	add	sp, #2
                                    255 ;main.c:34: enable_interrupts();
      00007A CDr00r00               256 	call	_enable_interrupts
                                    257 ;main.c:35: set_interrupts(VBL_IFLAG | LCD_IFLAG);    
      00007D 3E 03                  258 	ld	a, #0x03
      00007F F5                     259 	push	af
      000080 33                     260 	inc	sp
      000081 CDr00r00               261 	call	_set_interrupts
      000084 33                     262 	inc	sp
                                    263 ;main.c:37: while(1){
      000085                        264 00102$:
                                    265 ;main.c:38: SHOW_WIN;
      000085 F0r00                  266 	ldh	a, (_LCDC_REG+0)
      000087 F6 20                  267 	or	a, #0x20
      000089 E0r00                  268 	ldh	(_LCDC_REG+0),a
                                    269 ;/Users/max/Documents/gb_dev/gbdk/include/gb/gb.h:498: SCX_REG+=x, SCY_REG+=y;
      00008B F0r00                  270 	ldh	a, (_SCX_REG+0)
      00008D 3C                     271 	inc	a
      00008E E0r00                  272 	ldh	(_SCX_REG+0),a
                                    273 ;main.c:40: wait_vbl_done();
      000090 CDr00r00               274 	call	_wait_vbl_done
                                    275 ;main.c:42: }
      000093 18 F0                  276 	jr	00102$
                                    277 	.area _CODE
                                    278 	.area _CABS (ABS)
